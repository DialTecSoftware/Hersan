<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHistograma.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnSeries.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +gWbfIy9UpgKowAAAABJRU5ErkJggg==
</value>
  </data>
</root>