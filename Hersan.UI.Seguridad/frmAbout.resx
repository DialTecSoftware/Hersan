<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCACWAJQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/K8s/aX/AGw/BX7K+kJJ4jvZJtUuk8yz0myUS3t0MkbtuQET
        IPzuVX5SASeKyf24/wBrW1/ZN+E/22FIrvxNrRe10W0k+40gXLzSAHJijBUsB1LIuV3bh+SXjLxhqnxA
        8U3uta3f3OqavqUpmuru4fc8z/yAAwAowFAAAAAFfo3BHAks4/2rFNxop203k+y7Lu/kvL8H8XvGSnwv
        bLcuiqmLkru/w009m+8n0j21elk/qL4r/wDBYX4ieLbiaPwvp+i+EbI8RyGP+0LxfcvIBF+Hlceprw3x
        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
</value>
  </data>
</root>